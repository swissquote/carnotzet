<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
		"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
		"https://checkstyle.org/dtds/configuration_1_3.dtd">


<module name="Checker">
	<!-- If you set the basedir property below, then all reported file names will be relative to the specified
		directory. See http://checkstyle.sourceforge.net/5.x/config.html#Checker <property name="basedir" value="${basedir}"/> -->

	<metadata name="com.atlas-sw.eclipse" value="I like Sydney"/>

	<property name="severity" value="error"/>

	<!-- 	<module name="JavadocPackage"> -->
	<!-- 		<property name="allowLegacy" value="false" /> -->
	<!-- 	</module> -->

	<!-- <module name="Translation"> -->
	<!-- <property name="severity" value="${translation.severity}"/> -->
	<!-- </module> -->

	<!-- <module name="FileTabCharacter"> -->
	<!-- <property name="eachLine" value="false" /> -->
	<!-- </module> -->

	<module name="FileLength">
		<property name="fileExtensions" value="java"/>
	</module>

	<!-- <module name="NewlineAtEndOfFile" /> -->

	<!-- <module name="Header"> -->
	<!-- <property name="headerFile" value="${checkstyle.header.file}"/> -->
	<!-- <property name="fileExtensions" value="java"/> -->
	<!-- <property name="id" value="header"/> -->
	<!-- </module> -->

	<!-- <module name="RegexpSingleline"> -->
	<!-- <property name="format" value="\s+$" /> -->
	<!-- <property name="minimum" value="0" /> -->
	<!-- <property name="maximum" value="0" /> -->
	<!-- </module> -->

	<module name="LineLength">
		<!-- ignores javadoc lines, provided that they don't contain whitespaces after the '*' -->
		<property name="ignorePattern" value="^\t* *\* *[^ ]+$"/>
		<property name="max" value="145"/>
		<property name="tabWidth" value="1"/>
		<property name="fileExtensions" value="java"/>
	</module>

	<module name="SuppressWithPlainTextCommentFilter"/>

	<module name="TreeWalker">
		<module name="SuppressWarningsHolder"/>
		<module name="SuppressionCommentFilter"/>

		<property name="tabWidth" value="4"/>

		<module name="AvoidStarImport"/>
		<module name="ConstantName">
			<property name="format" value="^([_A-Z0-9]+|logger)$"/>
		</module>
		<module name="EmptyBlock"/>
		<module name="EmptyForIteratorPad"/>
		<module name="EqualsHashCode"/>
		<module name="OneStatementPerLine"/>

		<!-- module name="IllegalCatch"/ -->
		<!-- <module name="ImportControl"> -->
		<!-- <property name="file" value="code-analysis/import-control.xml"/> -->
		<!-- </module> -->
		<module name="IllegalImport"/>
		<module name="IllegalInstantiation"/>
		<module name="IllegalThrows"/>
		<module name="InnerAssignment"/>
		<!-- <module name="JavadocType"> -->
		<!-- <property name="authorFormat" value="\S" /> -->
		<!-- </module> -->
		<!-- <module name="JavadocMethod"> -->
		<!-- <property name="allowUndeclaredRTE" value="true" /> -->
		<!-- <property name="allowThrowsTagsForSubclasses" value="true" /> -->
		<!-- <property name="allowMissingPropertyJavadoc" value="true" /> -->
		<!-- <property name="allowMissingJavadoc" value="true" /> -->
		<!-- </module> -->
		<!-- <module name="JavadocVariable" /> -->
		<module name="JavadocStyle">
			<property name="scope" value="public"/>
			<property name="checkFirstSentence" value="false"/>
		</module>

		<module name="LeftCurly">
			<property name="option" value="eol"/>
			<property name="tokens" value="CLASS_DEF"/>
			<property name="tokens" value="CTOR_DEF"/>
			<property name="tokens" value="INTERFACE_DEF"/>
			<property name="tokens" value="METHOD_DEF"/>
		</module>
		<module name="LeftCurly">
			<property name="option" value="eol"/>
			<property name="tokens" value="LITERAL_CATCH"/>
			<property name="tokens" value="LITERAL_DO"/>
			<property name="tokens" value="LITERAL_ELSE"/>
			<property name="tokens" value="LITERAL_FINALLY"/>
			<property name="tokens" value="LITERAL_FOR"/>
			<property name="tokens" value="LITERAL_IF"/>
			<property name="tokens" value="LITERAL_SWITCH"/>
			<property name="tokens" value="LITERAL_SYNCHRONIZED"/>
			<property name="tokens" value="LITERAL_TRY"/>
			<property name="tokens" value="LITERAL_WHILE"/>
		</module>

		<module name="HideUtilityClassConstructor"/>
		<module name="SuppressionXpathSingleFilter">
			<property name="checks" value="HideUtilityClassConstructor"/>
			<property name="query"
					  value="//*[MODIFIERS//*[@text = 'UtilityClass' or @text='NoArgsConstructor' or @text = 'SpringBootApplication']]/descendant-or-self::node()"/>
		</module>

		<module name="OuterTypeNumber"/>
		<module name="MethodCount">
			<property name="maxTotal" value="50"/>
		</module>

		<module name="LocalFinalVariableName">
			<property name="format" value="^[a-z0-9]+[a-zA-Z0-9]*$"/>
		</module>
		<module name="LocalVariableName">
			<property name="format" value="^[a-z0-9]+[a-zA-Z0-9]*$"/>
		</module>
		<module name="MemberName">
			<property name="format" value="^[a-z0-9]+[a-zA-Z0-9]*$"/>
		</module>
		<module name="MethodLength"/>
		<module name="MethodName">
			<property name="format" value="^[a-z0-9]+[a-zA-Z0-9]*$"/>
		</module>
		<module name="MethodParamPad"/>
		<!-- 		<module name="ModifierOrder" /> -->
		<module name="NeedBraces"/>
		<module name="NoWhitespaceAfter">
			<property name="tokens" value="BNOT"/>
			<property name="tokens" value="DEC"/>
			<property name="tokens" value="DOT"/>
			<property name="tokens" value="INC"/>
			<property name="tokens" value="LNOT"/>
			<property name="tokens" value="UNARY_MINUS"/>
			<property name="tokens" value="UNARY_PLUS"/>
		</module>

		<module name="NoWhitespaceBefore"/>
		<module name="NoWhitespaceBefore">
			<property name="tokens" value="DOT"/>
			<property name="allowLineBreaks" value="true"/>
		</module>

		<module name="OperatorWrap"/>
		<module name="OperatorWrap">
			<property name="tokens" value="ASSIGN"/>
			<property name="tokens" value="DIV_ASSIGN"/>
			<property name="tokens" value="PLUS_ASSIGN"/>
			<property name="tokens" value="MINUS_ASSIGN"/>
			<property name="tokens" value="STAR_ASSIGN"/>
			<property name="tokens" value="MOD_ASSIGN"/>
			<property name="tokens" value="SR_ASSIGN"/>
			<property name="tokens" value="BSR_ASSIGN"/>
			<property name="tokens" value="SL_ASSIGN"/>
			<property name="tokens" value="BXOR_ASSIGN"/>
			<property name="tokens" value="BOR_ASSIGN"/>
			<property name="tokens" value="BAND_ASSIGN"/>
			<property name="option" value="eol"/>
		</module>
		<module name="PackageName"/>
		<module name="ParameterName">
			<property name="format" value="^[a-z0-9]+[a-zA-Z0-9]*$"/>
		</module>
		<module name="ParameterNumber"/>
		<module name="ParenPad"/>
		<module name="TypecastParenPad"/>
		<module name="RedundantImport"/>
		<module name="RedundantModifier"/>
		<module name="RightCurly">
			<property name="option" value="same"/>
			<property name="tokens" value="LITERAL_IF"/>
			<property name="tokens" value="LITERAL_ELSE"/>
		</module>
		<module name="RightCurly">
			<property name="option" value="alone"/>
			<property name="tokens" value="LITERAL_TRY"/>
			<property name="tokens" value="LITERAL_CATCH"/>
			<property name="tokens" value="LITERAL_FINALLY"/>
		</module>
		<module name="SimplifyBooleanExpression"/>
		<module name="SimplifyBooleanReturn"/>
		<module name="StaticVariableName">
			<property name="format" value="^[a-z0-9]+[a-zA-Z0-9]*$"/>
		</module>
		<module name="TypeName"/>
		<module name="UnusedImports"/>
		<module name="UpperEll"/>
		<module name="VisibilityModifier"/>
		<module name="SuppressionXpathSingleFilter">
			<property name="checks" value="VisibilityModifier"/>
			<property name="query"
					  value="//*[MODIFIERS//*[@text = 'Value']]/descendant-or-self::node()"/>
		</module>
		<module name="WhitespaceAfter"/>
		<module name="WhitespaceAround">
			<property name="tokens"
					  value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, TYPE_EXTENSION_AND"/>
		</module>
		<!-- 		<module name="GenericWhitespace" /> -->
		<module name="FinalClass"/>
		<module name="MissingSwitchDefault"/>
		<module name="MagicNumber">
			<property name="ignoreHashCodeMethod" value="true"/>
			<property name="ignoreAnnotation" value="true"/>
		</module>
		<!-- <module name="Indentation"> -->
		<!-- <property name="basicOffset" value="4" /> -->
		<!-- <property name="braceAdjustment" value="0" /> -->
		<!-- <property name="caseIndent" value="0" /> -->
		<!-- </module> -->
		<module name="RegexpSinglelineJava">
			<!-- we accept spaces for indentation only if they are at the end of the line, IDEs sometimes use them to finely align the end -->
			<!-- 2 cases in the regexp : only spaces, or at least a space somewhere with at least a tab afterwards -->
			<property name="format" value="(^ +\S)|(^\t* +\t+)"/>
			<property name="message"
					  value="Line has leading space characters; indentation should be performed with tabs only."/>
			<property name="ignoreComments" value="true"/>
		</module>
		<!-- 		<module name="ArrayTrailingComma" /> -->
		<!-- 		<module name="FinalLocalVariable" /> -->
		<module name="EqualsAvoidNull"/>
		<module name="ParameterAssignment"/>

		<!-- Generates quite a few errors -->
		<module name="CyclomaticComplexity">
			<property name="severity" value="ignore"/>
		</module>

		<module name="NestedForDepth">
			<property name="max" value="2"/>
		</module>
		<module name="NestedIfDepth">
			<property name="max" value="3"/>
		</module>
		<module name="NestedTryDepth"/>
		<module name="ExplicitInitialization"/>
		<module name="AnnotationUseStyle"/>
		<module name="MissingDeprecated"/>
		<module name="MissingOverride">
			<property name="javaFiveCompatibility" value="true"/>
		</module>
		<!-- 		<module name="PackageAnnotation" /> -->
		<!-- 		<module name="SuppressWarnings" /> -->
		<module name="OuterTypeFilename"/>
	</module>

	<module name="SuppressWarningsFilter"/>

</module>
